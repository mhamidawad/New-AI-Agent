name: New AI Agent - Build and Deploy

on:
  push:
    branches: [ main, ai-coding-agent, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Python AI Agent Testing
  python-agent:
    name: Python AI Agent Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
        pip install black flake8 mypy
        
    - name: Run code formatting check
      run: |
        black --check --diff ai_coding_agent/ tests/
        
    - name: Run linting
      run: |
        flake8 ai_coding_agent/ tests/ --max-line-length=100 --ignore=E203,W503
        mypy ai_coding_agent/ --ignore-missing-imports
        
    - name: Run Python tests
      run: |
        python -m pytest tests/ -v --cov=ai_coding_agent --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python-agent
        name: python-coverage
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: python-coverage-report
        path: htmlcov/
        retention-days: 30

  # VS Code Extension Building
  vscode-extension:
    name: VS Code Extension Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install VS Code Extension dependencies
      run: |
        cd vscode-extension
        npm ci
        
    - name: Compile TypeScript
      run: |
        cd vscode-extension
        npm run compile
        
    - name: Run ESLint
      run: |
        cd vscode-extension
        npm run lint
        
    - name: Run VS Code Extension tests
      run: |
        cd vscode-extension
        npm test
      continue-on-error: true
        
    - name: Build VSIX package
      run: |
        cd vscode-extension
        npm install -g @vscode/vsce
        vsce package
        
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: ai-coding-agent-vsix
        path: vscode-extension/*.vsix
        retention-days: 30
        
    - name: Upload extension build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vscode-build-logs
        path: |
          vscode-extension/out/
          vscode-extension/node_modules/.cache/
        retention-days: 7

  # Security and Quality Checks
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, python
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Setup Node.js for npm audit
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Run npm audit
      run: |
        cd vscode-extension
        npm audit --audit-level moderate --json > npm-audit.json || true
        
    - name: Setup Python for safety check
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Run Python safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          vscode-extension/npm-audit.json
          safety-report.json
        retention-days: 30

  # Publish to VS Code Marketplace (Main branch only)
  publish-extension:
    name: Publish Extension
    runs-on: ubuntu-latest
    needs: [python-agent, vscode-extension, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      run: |
        cd vscode-extension
        npm ci
        
    - name: Build VSIX package
      run: |
        cd vscode-extension
        npm install -g @vscode/vsce
        vsce package
        
    - name: Publish to VS Code Marketplace
      run: |
        cd vscode-extension
        vsce publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: AI Coding Agent v${{ github.run_number }}
        body: |
          ðŸš€ **AI Coding Agent Release v${{ github.run_number }}**
          
          ## What's New
          - Enhanced AI-powered code analysis and generation
          - Improved VS Code extension functionality
          - Better code review and suggestion features
          - Updated Python AI agent capabilities
          
          ## Installation
          Download the VSIX file from the assets below and install in VS Code.
          
          ## Features
          - AI-powered code analysis
          - Intelligent code generation
          - Automated code review
          - Project overview and documentation
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vscode-extension/*.vsix
        asset_name: ai-coding-agent-v${{ github.run_number }}.vsix
        asset_content_type: application/octet-stream

name: Build and Test VS Code Extension

on:
  push:
    branches: [ main, ai-coding-agent ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      run: |
        cd vscode-extension
        npm ci
        
    - name: Compile TypeScript
      run: |
        cd vscode-extension
        npm run compile
        
    - name: Run linting
      run: |
        cd vscode-extension
        npm run lint
        
    - name: Run tests
      run: |
        cd vscode-extension
        npm test
        
    - name: Build VSIX package
      run: |
        cd vscode-extension
        npm install -g @vscode/vsce
        vsce package
        
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: ai-coding-agent-vsix
        path: vscode-extension/*.vsix
        retention-days: 30
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          vscode-extension/out/
          vscode-extension/node_modules/.cache/
        retention-days: 7

  python-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run Python tests
      run: |
        python -m pytest tests/ -v --cov=ai_coding_agent --cov-report=xml
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python
        name: python-coverage

  publish-extension:
    runs-on: ubuntu-latest
    needs: [build-and-test, python-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json
        
    - name: Install dependencies
      run: |
        cd vscode-extension
        npm ci
        
    - name: Build VSIX package
      run: |
        cd vscode-extension
        npm install -g @vscode/vsce
        vsce package
        
    - name: Publish to VS Code Marketplace
      run: |
        cd vscode-extension
        vsce publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Automated release from GitHub Actions
          
          Changes in this release:
          - Built VS Code extension VSIX package
          - Updated AI coding agent functionality
          - Improved code analysis and generation features
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vscode-extension/*.vsix
        asset_name: ai-coding-agent-${{ github.run_number }}.vsix
        asset_content_type: application/octet-stream

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, python
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Run npm audit
      run: |
        cd vscode-extension
        npm audit --audit-level moderate
        
    - name: Run safety check for Python
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: safety-report.json
        retention-days: 30

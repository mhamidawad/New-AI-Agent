- name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build tool
        run: |
          python -m pip install --upgrade pip build

      - name: Build package
        run: |
          if [ -f "pyproject.toml" ]; then
            python -m build
          else
            echo "‚ùå pyproject.toml not found" && exit 1
          fi

      - name: Upload built distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
          retention-days: 30

  # Deploy Package
  deploy-package:
    name: Deploy Package to PyPI
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event.inputs.deploy == 'true' || (github.ref == 'refs/heads/main' && github.event_name == 'push')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Twine
        run: |
          python -m pip install --upgrade twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
